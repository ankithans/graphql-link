(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{75:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return n})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return p}));var r=a(3),s=a(7),i=(a(0),a(88)),n={id:"why_use",title:"Why use Graphql Link?",sidebar_label:"Why use Graphql Link",slug:"/"},o={unversionedId:"why_use",id:"why_use",isDocsHomePage:!1,title:"Why use Graphql Link?",description:"GraphQL-Link is an GraphQL gateway that lets you easily proxy to other GraphQL servers.",source:"@site/docs\\why_use.md",slug:"/",permalink:"/graphql-link/docs/",editUrl:"https://github.com/aerogear/graphql-link/docs/why_use.md",version:"current",sidebar_label:"Why use Graphql Link",sidebar:"main",next:{title:"Installation",permalink:"/graphql-link/docs/installation"}},l=[{value:"Features",id:"features",children:[]}],c={toc:l};function p(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"GraphQL-Link is an GraphQL gateway that lets you easily proxy to other GraphQL servers.")),Object(i.b)("img",{src:"https://raw.githubusercontent.com/aerogear/graphql-link/master/docs/images/logo.png",alt:"logo-graphql-link"}),Object(i.b)("h3",{id:"features"},"Features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Consolidate access to multiple upstream GraphQL servers via a single GraphQL gateway server."),Object(i.b)("li",{parentName:"ul"},"Introspection of the upstream server to discover their GraphQL schemas."),Object(i.b)("li",{parentName:"ul"},"The configuration uses GraphQL queries to define which upstream fields and types can be accessed."),Object(i.b)("li",{parentName:"ul"},"Upstream types, that are accessible, are automatically merged into the gateway schema."),Object(i.b)("li",{parentName:"ul"},"Type conflict due to the same type name existing in multiple upstream servers can be avoided by renaming types in the gateway."),Object(i.b)("li",{parentName:"ul"},"Supports GraphQL Queries, Mutations, and Subscriptions"),Object(i.b)("li",{parentName:"ul"},"Production mode settings to avoid the gateway's schema from dynamically changing due to changes in the upstream schemas."),Object(i.b)("li",{parentName:"ul"},"Uses the dataloader pattern to batch multiple query requests to the upstream servers."),Object(i.b)("li",{parentName:"ul"},"Link the graphs of different upstream servers by defining additional link fields."),Object(i.b)("li",{parentName:"ul"},"Web based configuration UI"),Object(i.b)("li",{parentName:"ul"},"OpenAPI based upstream servers (get automatically converted to a GraphQL Schema)")),Object(i.b)("img",{src:"https://raw.githubusercontent.com/aerogear/graphql-link/master/docs/images/graphql-link-overview.jpg",alt:"diagram of graphql-link"}))}p.isMDXComponent=!0}}]);